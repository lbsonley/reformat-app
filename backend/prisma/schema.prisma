datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "./generated/type-graphql"
}

generator frontend {
  provider = "typegraphql-prisma"
  output   = "../../frontend/prisma/generated/type-graphql"
}

model User {
  // personal information
  id String @id @default(uuid())
  email String @unique
  firstName String
  lastName String
  language Languages

  // landkarte information
  animal String?
  archetypeId Archetypes?
  archetype Archetype? @relation(fields: [archetypeId], references: [id])
  lifeJourneyId LifeJourneys?
  lifeJourney LifeJourney? @relation(fields: [lifeJourneyId], references: [id])

  // talent information
  talent String?
  talentLevelId TalentLevels?
  talentLevel TalentLevel? @relation(fields: [talentLevelId], references: [id])
  talentEnergyId TalentEnergies?
  talentEnergy TalentEnergy? @relation(fields: [talentEnergyId], references: [id])

  // progress information
  heroJourneyProgress Archetypes?
}

model Archetype {
  id Archetypes @id
  name String
  users User[]
}

model LifeJourney {
  id LifeJourneys @id
  name String
  users User[]
}

model TalentLevel {
  id TalentLevels @id
  name String
  users User[]
}

model TalentEnergy {
  id TalentEnergies @id
  name String
  users User[]
}

enum Archetypes {
  mentor
  herald
  gatekeeper
  joker
}

enum LifeJourneys {
  learn
  stand
  resolve
}

enum TalentLevels {
  ego
  emotion
  tao
}

enum TalentEnergies {
  push
  neutral
  pull
}

enum Languages {
  de
  en
  fr
  it
}
